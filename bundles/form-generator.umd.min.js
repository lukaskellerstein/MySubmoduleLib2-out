!function(t,o){"object"==typeof exports&&"undefined"!=typeof module?o(exports,require("@angular/core"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("form-generator",["exports","@angular/core","@angular/forms","@angular/common"],o):o(t["form-generator"]={},t.ng.core,t.ng.forms,t.ng.common)}(this,function(t,o,e,n){"use strict";var r=function(){function t(t){this.fb=t,this.config=[],this.submit=new o.EventEmitter}return Object.defineProperty(t.prototype,"controls",{get:function(){return this.config.filter(function(t){return"button"!==t.type})},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"changes",{get:function(){return this.form.valueChanges},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"valid",{get:function(){return this.form.valid},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"value",{get:function(){return this.form.value},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){this.form=this.createGroup()},t.prototype.ngOnChanges=function(){var e=this;if(this.form){var o=Object.keys(this.form.controls),n=this.controls.map(function(t){return t.name});o.filter(function(t){return!n.includes(t)}).forEach(function(t){return e.form.removeControl(t)}),n.filter(function(t){return!o.includes(t)}).forEach(function(o){var t=e.config.find(function(t){return t.name===o});e.form.addControl(o,e.createControl(t))})}},t.prototype.createGroup=function(){var o=this,e=this.fb.group({});return this.controls.forEach(function(t){return e.addControl(t.name,o.createControl(t))}),e},t.prototype.createControl=function(t){var o=t.disabled,e=t.validation,n=t.value;return this.fb.control({disabled:o,value:n},e)},t.prototype.handleSubmit=function(t){t.preventDefault(),t.stopPropagation(),this.submit.emit(this.value)},t.prototype.setDisabled=function(o,e){if(this.form.controls[o]){var t=e?"disable":"enable";this.form.controls[o][t]()}else this.config=this.config.map(function(t){return t.name===o&&(t.disabled=e),t})},t.prototype.setValue=function(t,o){this.form.controls[t].setValue(o,{emitEvent:!0})},t.decorators=[{type:o.Component,args:[{selector:"lib-dynamic-form",exportAs:"dynamicForm",template:'<form class="dynamic-form" [formGroup]="form" (submit)="handleSubmit($event)">\n  <ng-container *ngFor="let field of config;" dynamicField [config]="field" [group]="form">\n  </ng-container>\n</form>',styles:[""]}]}],t.ctorParameters=function(){return[{type:e.FormBuilder}]},t.propDecorators={config:[{type:o.Input}],submit:[{type:o.Output}]},t}(),i=function(){function t(){}return t.decorators=[{type:o.Component,args:[{selector:"lib-object-link",template:'<a [href]="config.label">{{ config.name }}</a>'}]}],t}(),c=function(){function t(){}return t.decorators=[{type:o.Component,args:[{selector:"lib-my-button",template:'<div class="dynamic-field form-button" [formGroup]="group">\n  <button [disabled]="config.disabled" type="submit">\n    {{ config.label }}\n  </button>\n</div>',styles:[""]}]}],t}(),a=function(){function t(){}return t.decorators=[{type:o.Component,args:[{selector:"lib-my-input",template:'<div class="dynamic-field form-input" [formGroup]="group">\n  <label>{{ config.label }}</label>\n  <input type="text" [attr.placeholder]="config.placeholder" [formControlName]="config.name">\n</div>',styles:[""]}]}],t}(),u=function(){function t(){}return t.decorators=[{type:o.Component,args:[{selector:"lib-my-select",template:'<div class="dynamic-field form-select" [formGroup]="group">\n  <label>{{ config.label }}</label>\n  <select [formControlName]="config.name">\n    <option value="">{{ config.placeholder }}</option>\n    <option *ngFor="let option of config.options">\n      {{ option }}\n    </option>\n  </select>\n</div>',styles:[""]}]}],t}(),s={button:c,input:a,select:u,object:i},l=function(){function t(t,o){this.resolver=t,this.container=o}return t.prototype.ngOnChanges=function(){this.component&&(this.component.instance.config=this.config,this.component.instance.group=this.group)},t.prototype.ngOnInit=function(){if(!s[this.config.type]){var t=Object.keys(s).join(", ");throw new Error("Trying to use an unsupported type ("+this.config.type+").\n        Supported types: "+t)}var o=this.resolver.resolveComponentFactory(s[this.config.type]);this.component=this.container.createComponent(o),this.component.instance.config=this.config,this.component.instance.group=this.group},t.decorators=[{type:o.Directive,args:[{selector:"[dynamicField]"}]}],t.ctorParameters=function(){return[{type:o.ComponentFactoryResolver},{type:o.ViewContainerRef}]},t.propDecorators={config:[{type:o.Input}],group:[{type:o.Input}]},t}(),f=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule,e.FormsModule,e.ReactiveFormsModule],declarations:[a,c,u,i],exports:[a,c,u,i],entryComponents:[c,a,u,i]}]}],t}(),p=function(){function t(){}return t.decorators=[{type:o.NgModule,args:[{imports:[n.CommonModule,e.FormsModule,e.ReactiveFormsModule,f],declarations:[r,l],exports:[r,l]}]}],t}();t.DynamicFormComponent=r,t.DynamicFieldDirective=l,t.MyButtonComponent=c,t.MyInputComponent=a,t.MySelectComponent=u,t.ObjectLinkComponent=i,t.FormGeneratorModule=p,t.Éµa=f,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=form-generator.umd.min.js.map