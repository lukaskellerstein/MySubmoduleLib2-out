{"version":3,"file":"form-generator.js.map","sources":["ng://form-generator/lib/dynamic-form/dynamic-form.component.ts","ng://form-generator/lib/dynamic-field/widgets/object-link/object-link.component.ts","ng://form-generator/lib/dynamic-field/widgets/my-button/my-button.component.ts","ng://form-generator/lib/dynamic-field/widgets/my-input/my-input.component.ts","ng://form-generator/lib/dynamic-field/widgets/my-select/my-select.component.ts","ng://form-generator/lib/dynamic-field/dynamic-field.directive.ts","ng://form-generator/lib/dynamic-field/widgets/widgets.module.ts","ng://form-generator/lib/form-generator.module.ts"],"sourcesContent":["import { Component, OnInit, OnChanges, EventEmitter, Input, Output } from '@angular/core';\nimport { FormGroup, FormBuilder, FormControl } from '@angular/forms';\n\nimport { Observable } from 'rxjs';\nimport { FieldConfig } from '../dynamic-field/widgets/base/field.config';\n\n@Component({\n  selector: 'lib-dynamic-form',\n  exportAs: 'dynamicForm',\n  template: `<form class=\"dynamic-form\" [formGroup]=\"form\" (submit)=\"handleSubmit($event)\">\n  <ng-container *ngFor=\"let fieldKey of objectGetKeys(config);\">\n    key: {{ fieldKey }}\n    <ng-container dynamicField [config]=\"config[fieldKey]\" [name]=\"fieldKey\" [group]=\"form\">\n    </ng-container>\n  </ng-container>\n  <input *ngIf=\"true\" type=\"submit\" name=\"submit\" value=\"Submit\"> \n</form>My `,\n  styles: [``]\n})\nexport class DynamicFormComponent implements OnChanges, OnInit {\n  @Input()\n  config = {}\n\n  @Output()\n  submit: EventEmitter<any> = new EventEmitter<any>();\n\n  form: FormGroup;\n\n  get controls() {\n    const controls = []\n    Object.keys(this.config).forEach(key => {\n      const value = this.config[key];\n      if (!value.hasOwnProperty(\"name\")) {\n        value.name = key;\n      }\n      controls.push(value);\n    });\n    return controls;\n  }\n  get changes(): Observable<any> { return this.form.valueChanges; }\n  get valid() { return this.form.valid; }\n  get value(): any { return this.form.value; }\n\n  objectGetKeys = Object.keys;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit() {\n    this.form = this.createGroup();\n  }\n\n  ngOnChanges() {\n    if (!this.form) {\n      this.form = this.createGroup();\n    }\n\n    const controls = Object.keys(this.form.controls);\n    const configControls = this.controls.map((item) => item.name);\n\n    controls\n      .filter((control) => !configControls.includes(control))\n      .forEach((control) => this.form.removeControl(control));\n\n    configControls\n      .filter((control) => !controls.includes(control))\n      .forEach((name) => {\n        const config = this.controls.find((control) => control.name === name);\n        this.form.addControl(name, this.createControl(config));\n      });\n\n\n  }\n\n  createGroup() {\n    const group = this.fb.group({});\n    this.controls.forEach(control => group.addControl(control.name, this.createControl(control)));\n    return group;\n  }\n\n  createControl(config: FieldConfig): FormControl {\n    const { disabled, validation, value } = config;\n    return this.fb.control({ disabled, value }, validation);\n  }\n\n  handleSubmit(event: Event) {\n    event.preventDefault();\n    event.stopPropagation();\n    this.submit.emit(this.value);\n  }\n\n  setDisabled(name: string, disable: boolean) {\n    if (this.form.controls[name]) {\n      const method = disable ? 'disable' : 'enable';\n      this.form.controls[name][method]();\n      return;\n    }\n\n    this.config = this.controls.map((item) => {\n      if (item.name === name) {\n        item.disabled = disable;\n      }\n      return item;\n    });\n  }\n\n  setValue(name: string, value: any) {\n    this.form.controls[name].setValue(value, { emitEvent: true });\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../base/field.config';\nimport { FormGroup } from '@angular/forms';\nimport { Field } from '../base/field';\n\n@Component({\n  selector: 'lib-object-link',\n  template: `<a href=\"#\" (click)=\"onLinkClick($event)\">{{ config | json }}</a>`\n})\nexport class ObjectLinkComponent implements Field  {\n\n  config: FieldConfig;\n  group: FormGroup;\n\n  onLinkClick(ev){\n    // TODO: trigger event to add new form to forms container \n    ev.stopPropagation();\n    ev.preventDefault();\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Field } from '../base/field';\nimport { FieldConfig } from '../base/field.config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-my-button',\n  template: `<div class=\"dynamic-field form-button\" [formGroup]=\"group\">\n  <button [disabled]=\"config.disabled\" type=\"submit\">\n    {{ config.label }}\n  </button>\n</div>`,\n  styles: [``]\n})\nexport class MyButtonComponent implements Field {\n  config: FieldConfig;\n  group: FormGroup;\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FieldConfig } from '../base/field.config';\nimport { FormGroup } from '@angular/forms';\nimport { Field } from '../base/field';\n\n@Component({\n  selector: 'lib-my-input',\n  template: `<div class=\"dynamic-field form-input\" [formGroup]=\"group\">\n  <label>{{ config.label }}</label>\n  <input type=\"text\" [attr.placeholder]=\"config.placeholder\" [formControlName]=\"config.name\">\n</div>`,\n  styles: [``]\n})\nexport class MyInputComponent implements Field  {\n\n  config: FieldConfig;\n  group: FormGroup;\n\n  \n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Field } from '../base/field';\nimport { FieldConfig } from '../base/field.config';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-my-select',\n  template: `<div class=\"dynamic-field form-select\" [formGroup]=\"group\">\n  <label>{{ config.label }}</label>\n  <select [formControlName]=\"config.name\">\n    <option value=\"\">{{ config.placeholder }}</option>\n    <option *ngFor=\"let option of config.options\">\n      {{ option }}\n    </option>\n  </select>\n</div>`,\n  styles: [``]\n})\nexport class MySelectComponent implements Field {\n\n  config: FieldConfig;\n  group: FormGroup;\n\n}\n","import { ComponentFactoryResolver, ComponentRef, Directive, Input, OnChanges, OnInit, Type, ViewContainerRef } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\n\nimport { ObjectLinkComponent } from './widgets/object-link/object-link.component';\nimport { Field } from './widgets/base/field';\nimport { MyButtonComponent } from './widgets/my-button/my-button.component';\nimport { MyInputComponent } from './widgets/my-input/my-input.component';\nimport { MySelectComponent } from './widgets/my-select/my-select.component';\nimport { FieldConfig } from './widgets/base/field.config';\n\nconst components: { [type: string]: Type<Field> } = {\n  button: MyButtonComponent,\n  input: MyInputComponent,\n  select: MySelectComponent,\n  object: ObjectLinkComponent\n};\n\n@Directive({\n  selector: '[dynamicField]'\n})\nexport class DynamicFieldDirective implements Field, OnChanges, OnInit {\n  @Input()\n  config: FieldConfig;\n\n  @Input()\n  name: string;\n\n  @Input()\n  group: FormGroup;\n\n  component: ComponentRef<Field>;\n\n  constructor(\n    private resolver: ComponentFactoryResolver,\n    private container: ViewContainerRef\n  ) { }\n\n  ngOnChanges() {\n    if (this.component) {\n      this.component.instance.config = this.config;\n      this.component.instance.group = this.group;\n    }\n  }\n\n  ngOnInit() {\n    if (!components[this.config.type]) {\n      const supportedTypes = Object.keys(components).join(', ');\n      throw new Error(\n        `Trying to use an unsupported type (${this.config.type}).\n        Supported types: ${supportedTypes}`\n      );\n    }\n    const component = this.resolver.resolveComponentFactory<Field>(components[this.config.type]);\n    this.component = this.container.createComponent(component);\n    this.component.instance.config = this.buildFieldConfig(this.config)\n    this.component.instance.group = this.group;\n  }\n\n  buildFieldConfig(config) {\n    if (!config.name) {\n      config.name = this.name;\n\n      if (!config.label) {\n        config.label = this.name;\n      }\n      // TODO further field config prerender changes\n      return config;\n\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MyInputComponent } from './my-input/my-input.component';\nimport { MyButtonComponent } from './my-button/my-button.component';\nimport { MySelectComponent } from './my-select/my-select.component';\nimport { ObjectLinkComponent } from './object-link/object-link.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  declarations: [MyInputComponent, MyButtonComponent, MySelectComponent, ObjectLinkComponent],\n  exports: [MyInputComponent, MyButtonComponent, MySelectComponent, ObjectLinkComponent],\n  entryComponents: [MyButtonComponent, MyInputComponent, MySelectComponent, ObjectLinkComponent]\n})\nexport class WidgetsModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicFormComponent } from './dynamic-form/dynamic-form.component';\nimport { DynamicFieldDirective } from './dynamic-field/dynamic-field.directive';\nimport { WidgetsModule } from './dynamic-field/widgets/widgets.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    WidgetsModule\n  ],\n  declarations: [DynamicFormComponent, DynamicFieldDirective],\n  exports: [DynamicFormComponent, DynamicFieldDirective]\n})\nexport class FormGeneratorModule { }\n"],"names":[],"mappings":";;;;;;;;AAAA;IA6CE,8BAAoB,EAAe;QAAf,OAAE,GAAF,EAAE,CAAa;sBAxB1B,EAAE;sBAGiB,IAAI,YAAY,EAAO;6BAmBnC,MAAM,CAAC,IAAI;KAEa;IAjBxC,sBAAI,0CAAQ;;;;QAAZ;YAAA,iBAUC;;YATC,IAAM,QAAQ,GAAG,EAAE,CAAA;YACnB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,UAAA,GAAG;;gBAClC,IAAM,KAAK,GAAG,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;gBAC/B,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;oBACjC,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC;iBAClB;gBACD,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;aACtB,CAAC,CAAC;YACH,OAAO,QAAQ,CAAC;SACjB;;;OAAA;IACD,sBAAI,yCAAO;;;;QAAX,cAAiC,OAAO,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;;;OAAA;IACjE,sBAAI,uCAAK;;;;QAAT,cAAc,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;;OAAA;IACvC,sBAAI,uCAAK;;;;QAAT,cAAmB,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE;;;OAAA;;;;IAM5C,uCAAQ;;;IAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;KAChC;;;;IAED,0CAAW;;;IAAX;QAAA,iBAoBC;QAnBC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YACd,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;SAChC;;QAED,IAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;QACjD,IAAM,cAAc,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,CAAC,IAAI,GAAA,CAAC,CAAC;QAE9D,QAAQ;aACL,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,CAAC,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAA,CAAC;aACtD,OAAO,CAAC,UAAC,OAAO,IAAK,OAAA,KAAI,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAA,CAAC,CAAC;QAE1D,cAAc;aACX,MAAM,CAAC,UAAC,OAAO,IAAK,OAAA,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAA,CAAC;aAChD,OAAO,CAAC,UAAC,IAAI;;YACZ,IAAM,MAAM,GAAG,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAC,OAAO,IAAK,OAAA,OAAO,CAAC,IAAI,KAAK,IAAI,GAAA,CAAC,CAAC;YACtE,KAAI,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;SACxD,CAAC,CAAC;KAGN;;;;IAED,0CAAW;;;IAAX;QAAA,iBAIC;;QAHC,IAAM,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAA,OAAO,IAAI,OAAA,KAAK,CAAC,UAAU,CAAC,OAAO,CAAC,IAAI,EAAE,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,GAAA,CAAC,CAAC;QAC9F,OAAO,KAAK,CAAC;KACd;;;;;IAED,4CAAa;;;;IAAb,UAAc,MAAmB;QACvB,IAAA,0BAAQ,EAAE,8BAAU,EAAE,oBAAK,CAAY;QAC/C,OAAO,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE,QAAQ,UAAA,EAAE,KAAK,OAAA,EAAE,EAAE,UAAU,CAAC,CAAC;KACzD;;;;;IAED,2CAAY;;;;IAAZ,UAAa,KAAY;QACvB,KAAK,CAAC,cAAc,EAAE,CAAC;QACvB,KAAK,CAAC,eAAe,EAAE,CAAC;QACxB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC9B;;;;;;IAED,0CAAW;;;;;IAAX,UAAY,IAAY,EAAE,OAAgB;QACxC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE;;YAC5B,IAAM,MAAM,GAAG,OAAO,GAAG,SAAS,GAAG,QAAQ,CAAC;YAC9C,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC;YACnC,OAAO;SACR;QAED,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,UAAC,IAAI;YACnC,IAAI,IAAI,CAAC,IAAI,KAAK,IAAI,EAAE;gBACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;aACzB;YACD,OAAO,IAAI,CAAC;SACb,CAAC,CAAC;KACJ;;;;;;IAED,uCAAQ;;;;;IAAR,UAAS,IAAY,EAAE,KAAU;QAC/B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;KAC/D;;gBArGF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,uZAOD;oBACT,MAAM,EAAE,CAAC,EAAE,CAAC;iBACb;;;;gBAjBmB,WAAW;;;yBAmB5B,KAAK;yBAGL,MAAM;;+BAvBT;;;;;;;ACAA;;;;;;;IAcE,yCAAW;;;;IAAX,UAAY,EAAE;;QAEZ,EAAE,CAAC,eAAe,EAAE,CAAC;QACrB,EAAE,CAAC,cAAc,EAAE,CAAC;KACrB;;gBAbF,SAAS,SAAC;oBACT,QAAQ,EAAE,iBAAiB;oBAC3B,QAAQ,EAAE,uEAAmE;iBAC9E;;8BARD;;;;;;;ACAA;;;;gBAKC,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,yKAIL;oBACL,MAAM,EAAE,CAAC,EAAE,CAAC;iBACb;;4BAbD;;;;;;;ACAA;;;;gBAKC,SAAS,SAAC;oBACT,QAAQ,EAAE,cAAc;oBACxB,QAAQ,EAAE,kNAGL;oBACL,MAAM,EAAE,CAAC,EAAE,CAAC;iBACb;;2BAZD;;;;;;;ACAA;;;;gBAKC,SAAS,SAAC;oBACT,QAAQ,EAAE,eAAe;oBACzB,QAAQ,EAAE,4TAQL;oBACL,MAAM,EAAE,CAAC,EAAE,CAAC;iBACb;;4BAjBD;;;;;;;ACAA;AAUA,IAAM,UAAU,GAAoC;IAClD,MAAM,EAAE,iBAAiB;IACzB,KAAK,EAAE,gBAAgB;IACvB,MAAM,EAAE,iBAAiB;IACzB,MAAM,EAAE,mBAAmB;CAC5B,CAAC;;IAiBA,+BACU,UACA;QADA,aAAQ,GAAR,QAAQ;QACR,cAAS,GAAT,SAAS;KACd;;;;IAEL,2CAAW;;;IAAX;QACE,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC5C;KACF;;;;IAED,wCAAQ;;;IAAR;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE;;YACjC,IAAM,cAAc,GAAG,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC1D,MAAM,IAAI,KAAK,CACb,wCAAsC,IAAI,CAAC,MAAM,CAAC,IAAI,qCACnC,cAAgB,CACpC,CAAC;SACH;;QACD,IAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAQ,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAC7F,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;QACnE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;KAC5C;;;;;IAED,gDAAgB;;;;IAAhB,UAAiB,MAAM;QACrB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE;YAChB,MAAM,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;YAExB,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;gBACjB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;aAC1B;;YAED,OAAO,MAAM,CAAC;SAEf;KACF;;gBApDF,SAAS,SAAC;oBACT,QAAQ,EAAE,gBAAgB;iBAC3B;;;;gBAnBQ,wBAAwB;gBAA2D,gBAAgB;;;yBAqBzG,KAAK;uBAGL,KAAK;wBAGL,KAAK;;gCA3BR;;;;;;;ACAA;;;;gBASC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,mBAAmB;qBACpB;oBACD,YAAY,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;oBAC3F,OAAO,EAAE,CAAC,gBAAgB,EAAE,iBAAiB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;oBACtF,eAAe,EAAE,CAAC,iBAAiB,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,mBAAmB,CAAC;iBAC/F;;wBAlBD;;;;;;;ACAA;;;;gBAQC,QAAQ,SAAC;oBACR,OAAO,EAAE;wBACP,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,aAAa;qBACd;oBACD,YAAY,EAAE,CAAC,oBAAoB,EAAE,qBAAqB,CAAC;oBAC3D,OAAO,EAAE,CAAC,oBAAoB,EAAE,qBAAqB,CAAC;iBACvD;;8BAjBD;;;;;;;;;;;;;;;"}
